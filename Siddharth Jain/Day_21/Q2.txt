// Keyboard row
class Solution {
public:
    vector<string> findWords(vector<string>& words) {
        unordered_map<char,int>m,m1,m2;
        string a="QWERTYUIOPqwertyuiop";
        string b="ASDFGHJKLasdfghjkl";
        string c="ZXCVBNMzxcvbnm";
        for(int i=0;i<a.length();i++)
        {
            m[a[i]]=1;
        }
        for(int i=0;i<b.length();i++)
        {
            m1[b[i]]=2;
        }
        for(int i=0;i<c.length();i++)
        {
            m2[c[i]]=3;
        }
        vector<string>ans;
        for(int i=0;i<words.size();i++)
        {
            int t=0,l=0,e=0,flag=0;
            if(m.find(words[i][0])!=m.end())
            {
                t=1;
            }
            else if(m1.find(words[i][0])!=m1.end())
            {
                l=1;
            }
            if(m2.find(words[i][0])!=m2.end())
            {
                e=1;
            }
            for(int j=1;j<words[i].length();j++)
            {
                if(t==1)
                {
                    if(m.find(words[i][j])==m.end())
                    {
                        flag=1;
                        break;
                    }
                }
                else if(l==1)
                {
                    if(m1.find(words[i][j])==m1.end())
                    {
                        flag=1;
                        break;
                    }
                }
                else if(e==1)
                {
                    if(m2.find(words[i][j])==m2.end())
                    {
                        flag=1;
                        break;
                    }
                }
            }
            if(flag==0)
            {
                ans.push_back(words[i]);
            }
        }
        return ans;

    }
};