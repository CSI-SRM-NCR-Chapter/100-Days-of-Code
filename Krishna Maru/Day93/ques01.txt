class Solution {
public:
 int solve(int index, int buy,vector<int>& prices,vector<vector<int>>&dp,int fee ){
        int profit=0;
        if(index==prices.size()){
            return 0;
        } 
    
        if(dp[index][buy]!=-1){
        return dp[index][buy];
    }
       if(buy){
        int buykaro = -prices[index] + solve(index+1, 0, prices,dp,fee);
        int skipkaro = 0 + solve(index+1, 1, prices,dp,fee);
        profit= max(buykaro, skipkaro);
        }
        else{
        int sellkaro = prices[index]-fee + solve(index+1, 1, prices,dp,fee);
        int skipkaro = 0+ solve(index+1, 0, prices,dp,fee);
        profit =max(sellkaro, skipkaro);
        }
       return dp[index][buy]=profit;
    }
int solveTab(int index, int buy,vector<int>& prices ,int fee){
    vector<int>next(2,0);
    vector<int>curr(2,0);
    int profit =0;
    for(int index=prices.size()-1;index>=0;index--){
        for(int buy=0;buy<=1;buy++){
                if(buy){
                    int buykaro = -prices[index] + next[0];
                    int skipkaro = 0 +next[1];
                    profit= max(buykaro, skipkaro);
                }
                else{
                    int sellkaro = prices[index] + next[1]-fee;
                    int skipkaro = 0+ next[0];
                    profit =max(sellkaro, skipkaro);
                }
                curr[buy]=profit;
            }
        next= curr;
    }
    
    return next[1];
}
    int maxProfit(vector<int>& prices, int fee) {
        //  vector<vector<int>>dp(prices.size(), vector<int>(2,-1));
        //  return solve(0,1,prices,dp,fee);
        return solveTab(0,1,prices,fee);
    }
};