/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* solve(int st,int en, vector<int>&nums ){

        if(st>en){
            return NULL;
        }
        int max=INT_MIN;
        int mid;
        for(int i=st;i<=en;i++){
            if(max<nums[i]){
                max=nums[i];
                mid=i;
            }
        }
        TreeNode* root=new TreeNode(max);
        root->left=solve(st, mid-1,nums);
        root->right=solve(mid+1, en, nums);
        return root;
    }
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return solve(0, nums.size()-1,nums);
        
    }
};