class Solution {
public:
    int solvedp(int i, int j, vector<vector<int>>&dp){
        if(i==0 and j==0)return 1;
        if(i<0 or j<0)return 0;
        if(dp[i][j]!=-1)return dp[i][j];

        int down = solvedp(i-1,j,dp);
        int right = solvedp(i,j-1,dp);

        return dp[i][j]=down+right;

    }
    int uniquePaths(int m, int n) {
     
        vector<vector<int>>grid(m+1, vector<int>(n+1,-1));


        // for(int i=1;i<m;i++){
        //     for(int j=1;j<n;j++){
        //      grid[i][j]=grid[i-1][j]+grid[i][j-1];
        //     }
        // }
        // return grid[m-1][n-1];

        // solve(m,n,0,0);

    
        return solvedp(m-1,n-1,grid);
    }
};