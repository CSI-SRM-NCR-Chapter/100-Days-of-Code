 bool isPalindrome(string s,int st, int e){
        while(st<=e){
            if(s[st]!=s[e]){
                return false;
            }
          st++;
          e--;
        }
        return true;
    }

    void solution(string s, vector<string>&path,vector<vector<string>>&res,int index){

        if(index==s.size()){
            res.push_back(path);
            return;
        }

        for(int i=index;i<s.size();i++){
        if(isPalindrome(s,index, i)){
             path.push_back(s.substr(index,i-index+1));
             solution(s, path, res, i+1);
             path.pop_back();
        }
          
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>>res;
        vector<string>path;
        int index=0;
        solution(s, path, res , index);
        return res;
    }